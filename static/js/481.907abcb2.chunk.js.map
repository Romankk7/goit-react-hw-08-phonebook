{"version":3,"file":"static/js/481.907abcb2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Layouts/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\n\nimport { useState } from \"react\";\n//import propTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\"\n\nimport { addContactOp } from \"redux/contacts/ops\";\nimport { selectStatus } from \"redux/contacts/contactsSlice\";\n\nconst INIT_STATE = {\n    name: \"\",\n    number: \"\", //phone\n}\n\nexport default function ContactForm (/*{onSubmit}*/) {\n    const [contact, setContact] = useState({...INIT_STATE})\n    //state = { ...INIT_STATE };\n\n    const dispatch = useDispatch();\n\n    function onInputChange(event) {\n        const { name, value } = event.currentTarget;\n        // const inputValue = event.currentTarget.value;\n        setContact({...contact, [name]: value });\n    };\n\n    function onFormSubmit(event) {\n        event.preventDefault();\n        \n        //dispatch(addContact(contact));\n        dispatch(addContactOp(contact));\n        setContact({ ...INIT_STATE });\n    };\n\n    const reduxStatus = useSelector(selectStatus);\n\n    function isAdding() {\n        if (reduxStatus === \"adding\") {\n            return true;\n        }\n        return false;\n    }\n\n    function submitButtonTitle() {\n        if (reduxStatus === \"adding\") {\n            return \"Adding...\";\n        }\n        return \"Add contact\";\n    }\n\n    return (\n        <form action=\"submit\" className={style.formAddContact} onSubmit={onFormSubmit}>\n            <label className={style.formLabel}>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={onInputChange}\n                    value={contact.name}\n                    className={style.formInput}\n                />\n            </label>\n            \n            <label className={style.formLabel}>Phone number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={onInputChange}\n                    value={contact.number}\n                    className={style.formInput}\n                />\n            </label>\n            \n            <button type=\"submit\" className={style.formBtnSubmit} disabled={isAdding()}>{ submitButtonTitle()}</button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n    //onSubmit: propTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","//import debounce from \"debounce\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n//import propTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nimport { updateFilter } from \"redux/contacts/filter\";\nimport { selectFilter } from \"redux/contacts/contactsSlice\";\n\nconst Filter = (/*{ value, onChange }*/) => {\n  const value = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  function onFilterChange(event) {\n    //todo debounce\n    dispatch(updateFilter(event.currentTarget.value));\n\n  }\n\n    return (<label>Filter contacts:\n              <input\n                type=\"text\"\n                name=\"filter\"\n                onChange={onFilterChange}\n                value={value}\n                className={styles.inputFilter}\n              />\n            </label>);\n}\n\nFilter.propTypes = {\n    //value: propTypes.string,\n    //onChange: propTypes.func,\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactItem_contact__C4k7V\",\"contactName\":\"ContactItem_contactName__ZAMAK\"};","import styles from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDelete }) => {\n    return (<span className={styles.contact}>\n        <span className={styles.contactName}>{name} :</span>\n        {number}\n    </span>);\n}\n\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contact\":\"ContactList_contact__0STHS\",\"btnDeleteContact\":\"ContactList_btnDeleteContact__yYG3c\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\"\n\n\nimport { selectItems, selectFilter, selectStatus } from \"redux/contacts/contactsSlice\";\n\nimport { getContactsOp/*, deleteContactOp */} from \"redux/contacts/ops\";\nimport { deleteContactWithFeedback } from \"redux/contacts/ops/deleteContactOp\";\n\nconst ContactList = () => {\n    const [isContactFetched, setIsContactFetched] = useState(false);\n\n    const lowCaseFilter = useSelector(selectFilter).toLowerCase();\n\n    const dispatch = useDispatch();\n    \n    const contacts = useSelector(selectItems);\n    const contactStatus = useSelector(selectStatus);\n\n    useEffect(() => {\n        //let promise = null;\n        if (!isContactFetched) {\n            /*promise = */dispatch(getContactsOp());\n            //console.log(promise);\n            setIsContactFetched(true);\n        }   \n        return () => {\n         \n        }\n    }, [isContactFetched, dispatch]);\n\n  \n\n    return (<>\n        {(contactStatus === \"loading\") && <p>[Loading contacts]</p>}\n        {(contacts && (contacts.length === 0)) &&\n            <p>No contacts so far...</p>}\n        {(contacts && (contacts.length > 0)) &&\n            <ul className={styles.contactList}>\n                {contacts.map((contact) => {\n                    return (contact.name.toLowerCase().includes(lowCaseFilter) &&\n                        <li key={contact.id} className={styles.contact}>\n                            <ContactItem\n                                name={contact.name}\n                                number={contact.number}\n                            />\n                            <button\n                                type=\"button\"\n                                onClick={() => deleteContactWithFeedback(contact.id)}\n                                className={styles.btnDeleteContact}\n                            >Delete contact\n                            </button>\n                        </li>);\n                })}\n            </ul>}  \n    </>             \n    );\n}\n\n\n\nexport default ContactList;","//import { useSelector } from \"react-redux\";\n\n//import { getContacts } from \"js/connectionsAPI\";\n//import { selectUserToken } from \"redux/auth/authSlice\";\n\nimport ContactForm from \"../ContactForm\";\nimport Filter from \"../Filter\";\nimport ContactList from \"../ContactList\";\n\n\nexport default function ContactsLayout(props) {\n  /*const token = useSelector(selectUserToken);\n\n  console.log(token);*/\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm\n        //onSubmit={(newContact) => {addContact(newContact)}}\n      />\n\n      <h2>Contacts</h2>\n\n      <Filter\n        //value={filter}\n        //onChange={onFilterChange}\n      />\n\n      <ContactList\n        //contacts={contacts}\n        //filter={filter}\n      />\n    </>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"formAddContact\":\"ContactForm_formAddContact__PiX5x\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtnSubmit\":\"ContactForm_formBtnSubmit__vYcgg\"};"],"names":["INIT_STATE","name","number","ContactForm","useState","contact","setContact","dispatch","useDispatch","onInputChange","event","currentTarget","value","reduxStatus","useSelector","selectStatus","action","className","style","onSubmit","preventDefault","addContactOp","type","pattern","title","required","onChange","disabled","selectFilter","updateFilter","styles","onDelete","isContactFetched","setIsContactFetched","lowCaseFilter","toLowerCase","contacts","selectItems","contactStatus","useEffect","getContactsOp","length","map","includes","onClick","deleteContactWithFeedback","id","ContactsLayout","props"],"sourceRoot":""}